<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Dataset_Pizzaria" targetNamespace="http://tempuri.org/Dataset_Pizzaria.xsd" xmlns:mstns="http://tempuri.org/Dataset_Pizzaria.xsd" xmlns="http://tempuri.org/Dataset_Pizzaria.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection ConnectionStringObject="Data Source=KAPITEINKOEK\KAPITEINKOEKSQL;Initial Catalog=Pizzaria;Integrated Security=True" IsAppSettingsProperty="false" Modifier="Assembly" Name="PizzariaConnectionString" ParameterPrefix="@" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BottomTableTableAdapter" GeneratorDataComponentClassName="BottomTableTableAdapter" Name="BottomTable" UserDataComponentName="BottomTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.BottomTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BottomTable] WHERE (([SauceId] = @Original_SauceId) AND ([BottomId] = @Original_BottomId) AND ([Name] = @Original_Name) AND ([IsCircle] = @Original_IsCircle))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SauceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SauceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsCircle" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsCircle" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BottomTable] ([BottomId], [Name], [IsCircle]) VALUES (@BottomId, @Name, @IsCircle);
SELECT SauceId, BottomId, Name, IsCircle FROM BottomTable WHERE (BottomId = @BottomId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsCircle" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsCircle" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SauceId, BottomId, Name, IsCircle FROM dbo.BottomTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BottomTable] SET [BottomId] = @BottomId, [Name] = @Name, [IsCircle] = @IsCircle WHERE (([SauceId] = @Original_SauceId) AND ([BottomId] = @Original_BottomId) AND ([Name] = @Original_Name) AND ([IsCircle] = @Original_IsCircle));
SELECT SauceId, BottomId, Name, IsCircle FROM BottomTable WHERE (BottomId = @BottomId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsCircle" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsCircle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SauceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SauceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsCircle" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsCircle" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SauceId" DataSetColumn="SauceId" />
              <Mapping SourceColumn="BottomId" DataSetColumn="BottomId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="IsCircle" DataSetColumn="IsCircle" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="IngredientTableTableAdapter" GeneratorDataComponentClassName="IngredientTableTableAdapter" Name="IngredientTable" UserDataComponentName="IngredientTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.IngredientTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[IngredientTable] WHERE (([IngredientId] = @Original_IngredientId) AND ([Name] = @Original_Name) AND ([Price] = @Original_Price) AND ((@IsNull_IsHalal = 1 AND [IsHalal] IS NULL) OR ([IsHalal] = @Original_IsHalal)) AND ((@IsNull_IsVegetarian = 1 AND [IsVegetarian] IS NULL) OR ([IsVegetarian] = @Original_IsVegetarian)) AND ((@IsNull_IsVegan = 1 AND [IsVegan] IS NULL) OR ([IsVegan] = @Original_IsVegan)) AND ((@IsNull_ContainsLactose = 1 AND [ContainsLactose] IS NULL) OR ([ContainsLactose] = @Original_ContainsLactose)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsHalal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsHalal" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsHalal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsHalal" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsVegetarian" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsVegetarian" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsVegetarian" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegetarian" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsVegan" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsVegan" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsVegan" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegan" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ContainsLactose" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContainsLactose" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_ContainsLactose" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ContainsLactose" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[IngredientTable] ([Name], [Price], [IsHalal], [IsVegetarian], [IsVegan], [ContainsLactose]) VALUES (@Name, @Price, @IsHalal, @IsVegetarian, @IsVegan, @ContainsLactose);
SELECT IngredientId, Name, Price, IsHalal, IsVegetarian, IsVegan, ContainsLactose FROM IngredientTable WHERE (IngredientId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsHalal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsHalal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsVegetarian" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegetarian" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsVegan" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegan" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@ContainsLactose" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ContainsLactose" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IngredientId, Name, Price, IsHalal, IsVegetarian, IsVegan, ContainsLactose FROM dbo.IngredientTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[IngredientTable] SET [Name] = @Name, [Price] = @Price, [IsHalal] = @IsHalal, [IsVegetarian] = @IsVegetarian, [IsVegan] = @IsVegan, [ContainsLactose] = @ContainsLactose WHERE (([IngredientId] = @Original_IngredientId) AND ([Name] = @Original_Name) AND ([Price] = @Original_Price) AND ((@IsNull_IsHalal = 1 AND [IsHalal] IS NULL) OR ([IsHalal] = @Original_IsHalal)) AND ((@IsNull_IsVegetarian = 1 AND [IsVegetarian] IS NULL) OR ([IsVegetarian] = @Original_IsVegetarian)) AND ((@IsNull_IsVegan = 1 AND [IsVegan] IS NULL) OR ([IsVegan] = @Original_IsVegan)) AND ((@IsNull_ContainsLactose = 1 AND [ContainsLactose] IS NULL) OR ([ContainsLactose] = @Original_ContainsLactose)));
SELECT IngredientId, Name, Price, IsHalal, IsVegetarian, IsVegan, ContainsLactose FROM IngredientTable WHERE (IngredientId = @IngredientId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsHalal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsHalal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsVegetarian" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegetarian" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsVegan" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegan" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@ContainsLactose" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ContainsLactose" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsHalal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsHalal" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsHalal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsHalal" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsVegetarian" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsVegetarian" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsVegetarian" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegetarian" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsVegan" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsVegan" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsVegan" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsVegan" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ContainsLactose" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContainsLactose" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_ContainsLactose" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ContainsLactose" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IngredientId" ColumnName="IngredientId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IngredientId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IngredientId" DataSetColumn="IngredientId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="IsHalal" DataSetColumn="IsHalal" />
              <Mapping SourceColumn="IsVegetarian" DataSetColumn="IsVegetarian" />
              <Mapping SourceColumn="IsVegan" DataSetColumn="IsVegan" />
              <Mapping SourceColumn="ContainsLactose" DataSetColumn="ContainsLactose" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OrderRuleTableTableAdapter" GeneratorDataComponentClassName="OrderRuleTableTableAdapter" Name="OrderRuleTable" UserDataComponentName="OrderRuleTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.OrderRuleTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OrderRuleTable] WHERE (([OrderRule_Id] = @Original_OrderRule_Id) AND ([PizzaId] = @Original_PizzaId) AND ([OrderId] = @Original_OrderId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderRule_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderRule_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OrderRuleTable] ([OrderRule_Id], [PizzaId]) VALUES (@OrderRule_Id, @PizzaId);
SELECT OrderRule_Id, PizzaId, OrderId FROM OrderRuleTable WHERE (OrderRule_Id = @OrderRule_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OrderRule_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderRule_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT OrderRule_Id, PizzaId, OrderId FROM dbo.OrderRuleTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OrderRuleTable] SET [OrderRule_Id] = @OrderRule_Id, [PizzaId] = @PizzaId WHERE (([OrderRule_Id] = @Original_OrderRule_Id) AND ([PizzaId] = @Original_PizzaId) AND ([OrderId] = @Original_OrderId));
SELECT OrderRule_Id, PizzaId, OrderId FROM OrderRuleTable WHERE (OrderRule_Id = @OrderRule_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OrderRule_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderRule_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderRule_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderRule_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OrderRule_Id" DataSetColumn="OrderRule_Id" />
              <Mapping SourceColumn="PizzaId" DataSetColumn="PizzaId" />
              <Mapping SourceColumn="OrderId" DataSetColumn="OrderId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OrderTableTableAdapter" GeneratorDataComponentClassName="OrderTableTableAdapter" Name="OrderTable" UserDataComponentName="OrderTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.OrderTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OrderTable] WHERE (([Order_RuleId] = @Original_Order_RuleId) AND ([UserId] = @Original_UserId) AND ([OrderId] = @Original_OrderId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Order_RuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Order_RuleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OrderTable] ([UserId], [OrderId]) VALUES (@UserId, @OrderId);
SELECT Order_RuleId, UserId, OrderId FROM OrderTable WHERE (OrderId = @OrderId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OrderId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Order_RuleId, UserId, OrderId FROM dbo.OrderTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OrderTable] SET [UserId] = @UserId, [OrderId] = @OrderId WHERE (([Order_RuleId] = @Original_Order_RuleId) AND ([UserId] = @Original_UserId) AND ([OrderId] = @Original_OrderId));
SELECT Order_RuleId, UserId, OrderId FROM OrderTable WHERE (OrderId = @OrderId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OrderId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Order_RuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Order_RuleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Order_RuleId" DataSetColumn="Order_RuleId" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="OrderId" DataSetColumn="OrderId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Pizza_IngredientTableAdapter" GeneratorDataComponentClassName="Pizza_IngredientTableAdapter" Name="Pizza_Ingredient" UserDataComponentName="Pizza_IngredientTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.Pizza_Ingredient" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Pizza_Ingredient] WHERE (([Pizza_IngredientId] = @Original_Pizza_IngredientId) AND ([PizzaId] = @Original_PizzaId) AND ([IngredientId] = @Original_IngredientId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Pizza_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Pizza_IngredientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Pizza_Ingredient] ([Pizza_IngredientId], [PizzaId]) VALUES (@Pizza_IngredientId, @PizzaId);
SELECT Pizza_IngredientId, PizzaId, IngredientId FROM Pizza_Ingredient WHERE (Pizza_IngredientId = @Pizza_IngredientId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Pizza_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Pizza_IngredientId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Pizza_IngredientId, PizzaId, IngredientId FROM dbo.Pizza_Ingredient</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Pizza_Ingredient] SET [Pizza_IngredientId] = @Pizza_IngredientId, [PizzaId] = @PizzaId WHERE (([Pizza_IngredientId] = @Original_Pizza_IngredientId) AND ([PizzaId] = @Original_PizzaId) AND ([IngredientId] = @Original_IngredientId));
SELECT Pizza_IngredientId, PizzaId, IngredientId FROM Pizza_Ingredient WHERE (Pizza_IngredientId = @Pizza_IngredientId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Pizza_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Pizza_IngredientId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Pizza_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Pizza_IngredientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IngredientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IngredientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Pizza_IngredientId" DataSetColumn="Pizza_IngredientId" />
              <Mapping SourceColumn="PizzaId" DataSetColumn="PizzaId" />
              <Mapping SourceColumn="IngredientId" DataSetColumn="IngredientId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PizzaTableTableAdapter" GeneratorDataComponentClassName="PizzaTableTableAdapter" Name="PizzaTable" UserDataComponentName="PizzaTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.PizzaTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PizzaTable] WHERE (((@IsNull_BottomId = 1 AND [BottomId] IS NULL) OR ([BottomId] = @Original_BottomId)) AND ([PizzaId] = @Original_PizzaId) AND ([Name] = @Original_Name) AND ([ActualPrice] = @Original_ActualPrice))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_ActualPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="ActualPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PizzaTable] ([BottomId], [Name], [ActualPrice]) VALUES (@BottomId, @Name, @ActualPrice);
SELECT BottomId, PizzaId, Name, ActualPrice FROM PizzaTable WHERE (PizzaId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@ActualPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="ActualPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BottomId, PizzaId, Name, ActualPrice FROM dbo.PizzaTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PizzaTable] SET [BottomId] = @BottomId, [Name] = @Name, [ActualPrice] = @ActualPrice WHERE (((@IsNull_BottomId = 1 AND [BottomId] IS NULL) OR ([BottomId] = @Original_BottomId)) AND ([PizzaId] = @Original_PizzaId) AND ([Name] = @Original_Name) AND ([ActualPrice] = @Original_ActualPrice));
SELECT BottomId, PizzaId, Name, ActualPrice FROM PizzaTable WHERE (PizzaId = @PizzaId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@ActualPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="ActualPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BottomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BottomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_ActualPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="ActualPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PizzaId" ColumnName="PizzaId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PizzaId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PizzaId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BottomId" DataSetColumn="BottomId" />
              <Mapping SourceColumn="PizzaId" DataSetColumn="PizzaId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="ActualPrice" DataSetColumn="ActualPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SauceTableTableAdapter" GeneratorDataComponentClassName="SauceTableTableAdapter" Name="SauceTable" UserDataComponentName="SauceTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.SauceTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SauceTable] WHERE (([SauceId] = @Original_SauceId) AND ([Name] = @Original_Name) AND ([IsSpicy] = @Original_IsSpicy))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SauceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SauceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsSpicy" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSpicy" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SauceTable] ([Name], [IsSpicy]) VALUES (@Name, @IsSpicy);
SELECT SauceId, Name, IsSpicy FROM SauceTable WHERE (SauceId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsSpicy" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSpicy" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SauceId, Name, IsSpicy FROM dbo.SauceTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SauceTable] SET [Name] = @Name, [IsSpicy] = @IsSpicy WHERE (([SauceId] = @Original_SauceId) AND ([Name] = @Original_Name) AND ([IsSpicy] = @Original_IsSpicy));
SELECT SauceId, Name, IsSpicy FROM SauceTable WHERE (SauceId = @SauceId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsSpicy" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSpicy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SauceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SauceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsSpicy" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsSpicy" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SauceId" ColumnName="SauceId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SauceId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SauceId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SauceId" DataSetColumn="SauceId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="IsSpicy" DataSetColumn="IsSpicy" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserTableTableAdapter" GeneratorDataComponentClassName="UserTableTableAdapter" Name="UserTable" UserDataComponentName="UserTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzariaConnectionString" DbObjectName="Pizzaria.dbo.UserTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserTable] WHERE (([UserId] = @Original_UserId) AND ([Name] = @Original_Name) AND ([Password] = @Original_Password) AND ([Email] = @Original_Email) AND ([Postcode] = @Original_Postcode) AND ([HouseNr.] = @p2) AND ([IsEmployee] = @Original_IsEmployee))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Postcode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Postcode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HouseNr." SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsEmployee" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsEmployee" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserTable] ([Name], [Password], [Email], [Postcode], [HouseNr.], [IsEmployee]) VALUES (@Name, @Password, @Email, @Postcode, @p1, @IsEmployee);
SELECT UserId, Name, Password, Email, Postcode, [HouseNr.], IsEmployee FROM UserTable WHERE (UserId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Postcode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Postcode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HouseNr." SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsEmployee" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsEmployee" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserId, Name, Password, Email, Postcode, [HouseNr.], IsEmployee FROM dbo.UserTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserTable] SET [Name] = @Name, [Password] = @Password, [Email] = @Email, [Postcode] = @Postcode, [HouseNr.] = @p1, [IsEmployee] = @IsEmployee WHERE (([UserId] = @Original_UserId) AND ([Name] = @Original_Name) AND ([Password] = @Original_Password) AND ([Email] = @Original_Email) AND ([Postcode] = @Original_Postcode) AND ([HouseNr.] = @p2) AND ([IsEmployee] = @Original_IsEmployee));
SELECT UserId, Name, Password, Email, Postcode, [HouseNr.], IsEmployee FROM UserTable WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Postcode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Postcode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HouseNr." SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsEmployee" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsEmployee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Postcode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Postcode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@p2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HouseNr." SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsEmployee" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsEmployee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserId" ColumnName="UserId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="Postcode" DataSetColumn="Postcode" />
              <Mapping SourceColumn="HouseNr." DataSetColumn="HouseNr_" />
              <Mapping SourceColumn="IsEmployee" DataSetColumn="IsEmployee" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Dataset_Pizzaria" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="Dataset_Pizzaria" msprop:Generator_UserDSName="Dataset_Pizzaria">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BottomTable" msprop:Generator_TableClassName="BottomTableDataTable" msprop:Generator_TableVarName="tableBottomTable" msprop:Generator_TablePropName="BottomTable" msprop:Generator_RowDeletingName="BottomTableRowDeleting" msprop:Generator_RowChangingName="BottomTableRowChanging" msprop:Generator_RowEvHandlerName="BottomTableRowChangeEventHandler" msprop:Generator_RowDeletedName="BottomTableRowDeleted" msprop:Generator_UserTableName="BottomTable" msprop:Generator_RowChangedName="BottomTableRowChanged" msprop:Generator_RowEvArgName="BottomTableRowChangeEvent" msprop:Generator_RowClassName="BottomTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SauceId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSauceId" msprop:Generator_ColumnPropNameInRow="SauceId" msprop:Generator_ColumnPropNameInTable="SauceIdColumn" msprop:Generator_UserColumnName="SauceId" type="xs:int" />
              <xs:element name="BottomId" msprop:Generator_ColumnVarNameInTable="columnBottomId" msprop:Generator_ColumnPropNameInRow="BottomId" msprop:Generator_ColumnPropNameInTable="BottomIdColumn" msprop:Generator_UserColumnName="BottomId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsCircle" msprop:Generator_ColumnVarNameInTable="columnIsCircle" msprop:Generator_ColumnPropNameInRow="IsCircle" msprop:Generator_ColumnPropNameInTable="IsCircleColumn" msprop:Generator_UserColumnName="IsCircle" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="IngredientTable" msprop:Generator_TableClassName="IngredientTableDataTable" msprop:Generator_TableVarName="tableIngredientTable" msprop:Generator_TablePropName="IngredientTable" msprop:Generator_RowDeletingName="IngredientTableRowDeleting" msprop:Generator_RowChangingName="IngredientTableRowChanging" msprop:Generator_RowEvHandlerName="IngredientTableRowChangeEventHandler" msprop:Generator_RowDeletedName="IngredientTableRowDeleted" msprop:Generator_UserTableName="IngredientTable" msprop:Generator_RowChangedName="IngredientTableRowChanged" msprop:Generator_RowEvArgName="IngredientTableRowChangeEvent" msprop:Generator_RowClassName="IngredientTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IngredientId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIngredientId" msprop:Generator_ColumnPropNameInRow="IngredientId" msprop:Generator_ColumnPropNameInTable="IngredientIdColumn" msprop:Generator_UserColumnName="IngredientId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:decimal" />
              <xs:element name="IsHalal" msprop:Generator_ColumnVarNameInTable="columnIsHalal" msprop:Generator_ColumnPropNameInRow="IsHalal" msprop:Generator_ColumnPropNameInTable="IsHalalColumn" msprop:Generator_UserColumnName="IsHalal" type="xs:boolean" minOccurs="0" />
              <xs:element name="IsVegetarian" msprop:Generator_ColumnVarNameInTable="columnIsVegetarian" msprop:Generator_ColumnPropNameInRow="IsVegetarian" msprop:Generator_ColumnPropNameInTable="IsVegetarianColumn" msprop:Generator_UserColumnName="IsVegetarian" type="xs:boolean" minOccurs="0" />
              <xs:element name="IsVegan" msprop:Generator_ColumnVarNameInTable="columnIsVegan" msprop:Generator_ColumnPropNameInRow="IsVegan" msprop:Generator_ColumnPropNameInTable="IsVeganColumn" msprop:Generator_UserColumnName="IsVegan" type="xs:boolean" minOccurs="0" />
              <xs:element name="ContainsLactose" msprop:Generator_ColumnVarNameInTable="columnContainsLactose" msprop:Generator_ColumnPropNameInRow="ContainsLactose" msprop:Generator_ColumnPropNameInTable="ContainsLactoseColumn" msprop:Generator_UserColumnName="ContainsLactose" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OrderRuleTable" msprop:Generator_TableClassName="OrderRuleTableDataTable" msprop:Generator_TableVarName="tableOrderRuleTable" msprop:Generator_TablePropName="OrderRuleTable" msprop:Generator_RowDeletingName="OrderRuleTableRowDeleting" msprop:Generator_RowChangingName="OrderRuleTableRowChanging" msprop:Generator_RowEvHandlerName="OrderRuleTableRowChangeEventHandler" msprop:Generator_RowDeletedName="OrderRuleTableRowDeleted" msprop:Generator_UserTableName="OrderRuleTable" msprop:Generator_RowChangedName="OrderRuleTableRowChanged" msprop:Generator_RowEvArgName="OrderRuleTableRowChangeEvent" msprop:Generator_RowClassName="OrderRuleTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OrderRule_Id" msprop:Generator_ColumnVarNameInTable="columnOrderRule_Id" msprop:Generator_ColumnPropNameInRow="OrderRule_Id" msprop:Generator_ColumnPropNameInTable="OrderRule_IdColumn" msprop:Generator_UserColumnName="OrderRule_Id" type="xs:int" />
              <xs:element name="PizzaId" msprop:Generator_ColumnVarNameInTable="columnPizzaId" msprop:Generator_ColumnPropNameInRow="PizzaId" msprop:Generator_ColumnPropNameInTable="PizzaIdColumn" msprop:Generator_UserColumnName="PizzaId" type="xs:int" />
              <xs:element name="OrderId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnOrderId" msprop:Generator_ColumnPropNameInRow="OrderId" msprop:Generator_ColumnPropNameInTable="OrderIdColumn" msprop:Generator_UserColumnName="OrderId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OrderTable" msprop:Generator_TableClassName="OrderTableDataTable" msprop:Generator_TableVarName="tableOrderTable" msprop:Generator_TablePropName="OrderTable" msprop:Generator_RowDeletingName="OrderTableRowDeleting" msprop:Generator_RowChangingName="OrderTableRowChanging" msprop:Generator_RowEvHandlerName="OrderTableRowChangeEventHandler" msprop:Generator_RowDeletedName="OrderTableRowDeleted" msprop:Generator_UserTableName="OrderTable" msprop:Generator_RowChangedName="OrderTableRowChanged" msprop:Generator_RowEvArgName="OrderTableRowChangeEvent" msprop:Generator_RowClassName="OrderTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Order_RuleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnOrder_RuleId" msprop:Generator_ColumnPropNameInRow="Order_RuleId" msprop:Generator_ColumnPropNameInTable="Order_RuleIdColumn" msprop:Generator_UserColumnName="Order_RuleId" type="xs:int" />
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId" type="xs:int" />
              <xs:element name="OrderId" msprop:Generator_ColumnVarNameInTable="columnOrderId" msprop:Generator_ColumnPropNameInRow="OrderId" msprop:Generator_ColumnPropNameInTable="OrderIdColumn" msprop:Generator_UserColumnName="OrderId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Pizza_Ingredient" msprop:Generator_TableClassName="Pizza_IngredientDataTable" msprop:Generator_TableVarName="tablePizza_Ingredient" msprop:Generator_TablePropName="Pizza_Ingredient" msprop:Generator_RowDeletingName="Pizza_IngredientRowDeleting" msprop:Generator_RowChangingName="Pizza_IngredientRowChanging" msprop:Generator_RowEvHandlerName="Pizza_IngredientRowChangeEventHandler" msprop:Generator_RowDeletedName="Pizza_IngredientRowDeleted" msprop:Generator_UserTableName="Pizza_Ingredient" msprop:Generator_RowChangedName="Pizza_IngredientRowChanged" msprop:Generator_RowEvArgName="Pizza_IngredientRowChangeEvent" msprop:Generator_RowClassName="Pizza_IngredientRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Pizza_IngredientId" msprop:Generator_ColumnVarNameInTable="columnPizza_IngredientId" msprop:Generator_ColumnPropNameInRow="Pizza_IngredientId" msprop:Generator_ColumnPropNameInTable="Pizza_IngredientIdColumn" msprop:Generator_UserColumnName="Pizza_IngredientId" type="xs:int" />
              <xs:element name="PizzaId" msprop:Generator_ColumnVarNameInTable="columnPizzaId" msprop:Generator_ColumnPropNameInRow="PizzaId" msprop:Generator_ColumnPropNameInTable="PizzaIdColumn" msprop:Generator_UserColumnName="PizzaId" type="xs:int" />
              <xs:element name="IngredientId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIngredientId" msprop:Generator_ColumnPropNameInRow="IngredientId" msprop:Generator_ColumnPropNameInTable="IngredientIdColumn" msprop:Generator_UserColumnName="IngredientId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PizzaTable" msprop:Generator_TableClassName="PizzaTableDataTable" msprop:Generator_TableVarName="tablePizzaTable" msprop:Generator_TablePropName="PizzaTable" msprop:Generator_RowDeletingName="PizzaTableRowDeleting" msprop:Generator_RowChangingName="PizzaTableRowChanging" msprop:Generator_RowEvHandlerName="PizzaTableRowChangeEventHandler" msprop:Generator_RowDeletedName="PizzaTableRowDeleted" msprop:Generator_UserTableName="PizzaTable" msprop:Generator_RowChangedName="PizzaTableRowChanged" msprop:Generator_RowEvArgName="PizzaTableRowChangeEvent" msprop:Generator_RowClassName="PizzaTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BottomId" msprop:Generator_ColumnVarNameInTable="columnBottomId" msprop:Generator_ColumnPropNameInRow="BottomId" msprop:Generator_ColumnPropNameInTable="BottomIdColumn" msprop:Generator_UserColumnName="BottomId" type="xs:int" minOccurs="0" />
              <xs:element name="PizzaId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnPizzaId" msprop:Generator_ColumnPropNameInRow="PizzaId" msprop:Generator_ColumnPropNameInTable="PizzaIdColumn" msprop:Generator_UserColumnName="PizzaId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ActualPrice" msprop:Generator_ColumnVarNameInTable="columnActualPrice" msprop:Generator_ColumnPropNameInRow="ActualPrice" msprop:Generator_ColumnPropNameInTable="ActualPriceColumn" msprop:Generator_UserColumnName="ActualPrice" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SauceTable" msprop:Generator_TableClassName="SauceTableDataTable" msprop:Generator_TableVarName="tableSauceTable" msprop:Generator_TablePropName="SauceTable" msprop:Generator_RowDeletingName="SauceTableRowDeleting" msprop:Generator_RowChangingName="SauceTableRowChanging" msprop:Generator_RowEvHandlerName="SauceTableRowChangeEventHandler" msprop:Generator_RowDeletedName="SauceTableRowDeleted" msprop:Generator_UserTableName="SauceTable" msprop:Generator_RowChangedName="SauceTableRowChanged" msprop:Generator_RowEvArgName="SauceTableRowChangeEvent" msprop:Generator_RowClassName="SauceTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SauceId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSauceId" msprop:Generator_ColumnPropNameInRow="SauceId" msprop:Generator_ColumnPropNameInTable="SauceIdColumn" msprop:Generator_UserColumnName="SauceId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsSpicy" msprop:Generator_ColumnVarNameInTable="columnIsSpicy" msprop:Generator_ColumnPropNameInRow="IsSpicy" msprop:Generator_ColumnPropNameInTable="IsSpicyColumn" msprop:Generator_UserColumnName="IsSpicy" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserTable" msprop:Generator_TableClassName="UserTableDataTable" msprop:Generator_TableVarName="tableUserTable" msprop:Generator_TablePropName="UserTable" msprop:Generator_RowDeletingName="UserTableRowDeleting" msprop:Generator_RowChangingName="UserTableRowChanging" msprop:Generator_RowEvHandlerName="UserTableRowChangeEventHandler" msprop:Generator_RowDeletedName="UserTableRowDeleted" msprop:Generator_UserTableName="UserTable" msprop:Generator_RowChangedName="UserTableRowChanged" msprop:Generator_RowEvArgName="UserTableRowChangeEvent" msprop:Generator_RowClassName="UserTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Postcode" msprop:Generator_ColumnVarNameInTable="columnPostcode" msprop:Generator_ColumnPropNameInRow="Postcode" msprop:Generator_ColumnPropNameInTable="PostcodeColumn" msprop:Generator_UserColumnName="Postcode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="HouseNr_" msprop:Generator_ColumnVarNameInTable="columnHouseNr_" msprop:Generator_ColumnPropNameInRow="HouseNr_" msprop:Generator_ColumnPropNameInTable="HouseNr_Column" msprop:Generator_UserColumnName="HouseNr_" type="xs:int" />
              <xs:element name="IsEmployee" msprop:Generator_ColumnVarNameInTable="columnIsEmployee" msprop:Generator_ColumnPropNameInRow="IsEmployee" msprop:Generator_ColumnPropNameInTable="IsEmployeeColumn" msprop:Generator_UserColumnName="IsEmployee" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Bottom" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BottomTable" />
      <xs:field xpath="mstns:BottomId" />
    </xs:unique>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:IngredientTable" />
      <xs:field xpath="mstns:IngredientId" />
    </xs:unique>
    <xs:unique name="OrderRuleTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OrderRuleTable" />
      <xs:field xpath="mstns:OrderRule_Id" />
    </xs:unique>
    <xs:unique name="OrderTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OrderTable" />
      <xs:field xpath="mstns:OrderId" />
    </xs:unique>
    <xs:unique name="Pizza_Ingredient_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Pizza_Ingredient" />
      <xs:field xpath="mstns:Pizza_IngredientId" />
    </xs:unique>
    <xs:unique name="PizzaTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PizzaTable" />
      <xs:field xpath="mstns:PizzaId" />
    </xs:unique>
    <xs:unique name="SauceTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SauceTable" />
      <xs:field xpath="mstns:SauceId" />
    </xs:unique>
    <xs:unique name="UserTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserTable" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_OrderRule_Order" msdata:parent="OrderTable" msdata:child="OrderRuleTable" msdata:parentkey="OrderId" msdata:childkey="OrderId" msprop:Generator_UserChildTable="OrderRuleTable" msprop:Generator_ChildPropName="GetOrderRuleTableRows" msprop:Generator_UserRelationName="FK_OrderRule_Order" msprop:Generator_RelationVarName="relationFK_OrderRule_Order" msprop:Generator_UserParentTable="OrderTable" msprop:Generator_ParentPropName="OrderTableRow" />
      <msdata:Relationship name="FK_Pizza_Ingredient_IngredientTable" msdata:parent="IngredientTable" msdata:child="Pizza_Ingredient" msdata:parentkey="IngredientId" msdata:childkey="IngredientId" msprop:Generator_UserChildTable="Pizza_Ingredient" msprop:Generator_ChildPropName="GetPizza_IngredientRows" msprop:Generator_UserRelationName="FK_Pizza_Ingredient_IngredientTable" msprop:Generator_ParentPropName="IngredientTableRow" msprop:Generator_RelationVarName="relationFK_Pizza_Ingredient_IngredientTable" msprop:Generator_UserParentTable="IngredientTable" />
      <msdata:Relationship name="FK_OrderRule_Pizza" msdata:parent="PizzaTable" msdata:child="OrderRuleTable" msdata:parentkey="PizzaId" msdata:childkey="PizzaId" msprop:Generator_UserChildTable="OrderRuleTable" msprop:Generator_ChildPropName="GetOrderRuleTableRows" msprop:Generator_UserRelationName="FK_OrderRule_Pizza" msprop:Generator_RelationVarName="relationFK_OrderRule_Pizza" msprop:Generator_UserParentTable="PizzaTable" msprop:Generator_ParentPropName="PizzaTableRow" />
      <msdata:Relationship name="FK_Pizza_Ingredient_PizzaTable" msdata:parent="PizzaTable" msdata:child="Pizza_Ingredient" msdata:parentkey="PizzaId" msdata:childkey="PizzaId" msprop:Generator_UserChildTable="Pizza_Ingredient" msprop:Generator_ChildPropName="GetPizza_IngredientRows" msprop:Generator_UserRelationName="FK_Pizza_Ingredient_PizzaTable" msprop:Generator_RelationVarName="relationFK_Pizza_Ingredient_PizzaTable" msprop:Generator_UserParentTable="PizzaTable" msprop:Generator_ParentPropName="PizzaTableRow" />
      <msdata:Relationship name="FK_Pizza_Bottom" msdata:parent="BottomTable" msdata:child="PizzaTable" msdata:parentkey="BottomId" msdata:childkey="BottomId" msprop:Generator_UserChildTable="PizzaTable" msprop:Generator_ChildPropName="GetPizzaTableRows" msprop:Generator_UserRelationName="FK_Pizza_Bottom" msprop:Generator_ParentPropName="BottomTableRow" msprop:Generator_RelationVarName="relationFK_Pizza_Bottom" msprop:Generator_UserParentTable="BottomTable" />
      <msdata:Relationship name="FK_Bottom_Sauce" msdata:parent="SauceTable" msdata:child="BottomTable" msdata:parentkey="SauceId" msdata:childkey="SauceId" msprop:Generator_UserChildTable="BottomTable" msprop:Generator_ChildPropName="GetBottomTableRows" msprop:Generator_UserRelationName="FK_Bottom_Sauce" msprop:Generator_RelationVarName="relationFK_Bottom_Sauce" msprop:Generator_UserParentTable="SauceTable" msprop:Generator_ParentPropName="SauceTableRow" />
      <msdata:Relationship name="FK_Order_User" msdata:parent="UserTable" msdata:child="OrderTable" msdata:parentkey="UserId" msdata:childkey="UserId" msprop:Generator_UserChildTable="OrderTable" msprop:Generator_ChildPropName="GetOrderTableRows" msprop:Generator_UserRelationName="FK_Order_User" msprop:Generator_RelationVarName="relationFK_Order_User" msprop:Generator_UserParentTable="UserTable" msprop:Generator_ParentPropName="UserTableRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>